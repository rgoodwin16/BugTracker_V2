@model BugTracker_V2.Models.Ticket
@using Microsoft.AspNet.Identity;

<!-- ==============================================
     SINGLE TICKET
=============================================== -->
<section class="content-wrap ecommerce-products">

        <div class="row">

        <div class="col-lg-8"><!-- begin ticket column -->

            <div class="card">

                <div class="title">
                    <!-- Title -->
                    <h3>@Html.DisplayFor(model => model.Title)</h3>
                    
                    @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") || User.Identity.GetUserId() == @Model.AssignedToId)
                    {
                        <div class="btn-group right">
                            <a href="@Url.Action("Edit", "Tickets", new { id = Model.Id })" class="btn btn-small z-depth-2"><i class="mdi mdi-editor-mode-edit"></i> Edit Ticket</a>
                        </div>
                    }
                    
               </div>

                <div class="content">

                    <h5>
                        @if (Model.TicketPriority.Name == "Critical")
                        {
                            <span class="alert">@Html.DisplayFor(model => model.TicketPriority.Name)</span>
                        }
                        Created: @Html.DisplayFor(model => model.Created.LocalDateTime) | Owned by : @Html.DisplayFor(model => model.OwnedBy.DisplayName)
                    </h5>
                    <hr />
                    <p class=" table table-hover">@Html.Raw(Model.Description)</p>

                    <hr />

                    @if (Model.TicketStatus.Name == "Resolved")
                    {
                        <div class="alert alert-dismissible orange accent-2 white-text">
                            This ticket was marked <strong>Resolved</strong> on : @Html.DisplayFor(model => model.Updated)
                            <button class="close">&times;</button>
                        </div>
                    }

                    @if (Model.Updated != null && Model.TicketStatus.Name != "Resolved")
                    {
                        <div class="alert alert-dismissible green lighten-3 white-text">
                            <strong>Updated: </strong>@Html.DisplayFor(model => model.Updated)
                            <button class="close">&times;</button>
                        </div>
                    }


                </div><!-- /content -->


            
            </div><!-- /card (title|description)-->

            <br />

        </div><!-- end ticket column -->

            <div class=" col-lg-4"><!-- begin meta column -->
            
                <div class="card">

                    <div class="title">
                        <h5>Developer</h5>
                    </div>

                    @if (Model.AssignedToId == null)
                    {
                        <div class="content">
                            <button class="btn btn-default">Not Yet Assigned</button>
                        </div>
                    }
                    else
                    {
                        <div class="content">
                            <button class="orange btn btn-small z-depth-0 white-text" disabled>   @Html.DisplayFor(model => model.AssignedTo.DisplayName)</button>
                        </div>
                    }
                    
                    

                </div><!-- /card -->

                <br />
                

                <div class="card">

                    <div class="title">
                        <h5>Ticket Meta</h5>
                    </div>

                    <div class="content">
                        
                        <ul class="list-group">
                            <li class="list-group-item meta_height">
                                Type:<span class="cyan darken-1 right btn btn-small z-depth-0" disabled>@Html.DisplayFor(model => model.TicketType.Name)</span>
                                <br />
                            </li>
                            <li class="list-group-item meta_height">
                                Status:
                                <span class="cyan darken-1 right btn btn-small z-depth-0" disabled>@Html.DisplayFor(model => model.TicketStatus.Name)</span>
                            </li>
                            @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") || User.IsInRole("Developer"))
                            {
                                <li class="list-group-item meta_height">
                                    Priority:
                                    <span class="cyan darken-1 right btn btn-small z-depth-0" disabled>@Html.DisplayFor(model => model.TicketPriority.Name)</span>
                                </li>
                            }

                        </ul>

                    </div><!-- /content -->

                </div><!-- /card TicketType-->

            </div><!-- /meta column -->


        </div><!-- End Row -->
     
        <br />
        <br />

        <div class="card">
        
            <div class="title">
                <h5><i class="fa fa-comments"></i> Comments</h5>
                <a class="minimize" href="#">
                    <i class="mdi-navigation-expand-less"></i>
                </a>
            </div><!-- /title -->

            <div class="content">

                <div class="col-lg-12" id="comment_list" style="height:200px; overflow:auto;">

                    @foreach (var item in Model.Comments.OrderByDescending(c => c.Created))
                    {

                        <div class="card-panel z-depth-2">

                            <div class="mail-subject">
                                <h4><img src="~/images/user10-30x30.jpg" class="pull-left" style="padding-right:3px;" /> @Html.DisplayFor(modelItem => item.Author.DisplayName) <small class="mail-date">@Html.DisplayFor(modelItem => item.Created.LocalDateTime)</small></h4>

                            </div> <!-- /user name|created -->

                            <hr />

                            <div class="mail-text">
                                <p>@Html.Raw(item.Body)</p>
                            </div>

                        </div><!-- /card-panel -->

                    }

                    <br />

                </div><!-- /comment list column -->

                <hr />
                <br />

                @if (Model.TicketStatus.Name == "Resolved")
                {
                    <div class="col-lg-12">
                        <p>This ticket has been Resolved, comments are closed.</p>
                    </div>
                }
                else if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") || User.IsInRole("Developer") || User.Identity.GetUserId() == Model.OwnedById)
                {
                    <div class="col-lg-12" id="comment_form">

                        <form method="post" action="@Url.Action("CreateComment", "Tickets",new { projectId = Model.ProjectId, ticketId = Model.Id })">
                            @Html.AntiForgeryToken()
                            <h3>Leave A Comment</h3>

                            <div class="form-group">
                                <div>
                                    <textarea name="Body" class="materialize-textarea" rows="6"></textarea>
                                </div>
                            </div><!-- End Comment Box -->

                            <input type="submit" value="Submit" class="btn btn-default" /><br />

                        </form><!--/comment form -->




                        <br />

                    </div><!-- /comment form column -->
                }

                else
                {
                    <div class="col-lg-12">
                        <p>Only Admins, Project Managers, Developers, or the original creator of the ticket may make a comment.</p>
                    </div>
                }

                

                

            </div><!-- /content (Comments)-->

        </div><!-- /card (Comments)-->

        
        <div class="card">

            <ul class="collapsible" data-collapsible="accordian">

                <li><!-- begin attachments -->
                    
                    <div class="collapsible-header">
                        <i class="fa fa-paperclip"></i> Attachments<span class="yay-collapse-icon mdi-navigation-expand-more right"></span>
                    </div>

                    <div class="collapsible-body">

                        <div class="content">

                            <div class="row">

                                <div class="col-lg-4">

                                        <div class="card">

                                            <div class="title">
                                                <h5>Add Attachment</h5>
                                            </div>

                                            <div class="content">

                                                @if (Model.TicketStatus.Name == "Resolved")
                                                {
                                                    <div class="col-lg-12">
                                                        <p>This ticket has been Resolved, attachments are closed.</p>
                                                    </div>
                                                }
                                                else if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") || User.IsInRole("Developer") || User.Identity.GetUserId() == Model.OwnedById)
                                                {
                                                    <div class="form-group">
                                                        <!-- Begin File Attachment -->

                                                        <form method="post" action="@Url.Action("AddAttachment", "Tickets", new { projectId = Model.ProjectId, ticketId = Model.Id})" enctype="multipart/form-data">
                                                            @Html.AntiForgeryToken()

                                                            <div class="input-field">
                                                                <input name="title" class="validate" type="text">
                                                                <label for="title">Title<small> Required</small></label>
                                                            </div>

                                                            <div class="input-field">
                                                                <input name="description" class="validate" type="text">
                                                                <label for="description">Description <small> Required</small></label>
                                                            </div>

                                                            <br />

                                                            <div class="file-field input-field">
                                                                <input class="file-path validate" type="text" />
                                                                <div class="btn">
                                                                    <span>File</span>
                                                                    <input name="file" type="file" id="fileUpload" />
                                                                </div>
                                                                <p>@Html.ValidationMessage("file", new { @class = "text-danger" })</p>

                                                            </div>

                                                            <br />

                                                            <input type="submit" value="Submit" class="btn btn-default" />

                                                        </form>

                                                        <br />

                                                    </div><!-- /attachment file -->
                                                }
                                                else
                                                {
                                                    <div class="col-lg-12">
                                                        <p>Only Admins, Project Managers, Developers, or the original creator of the ticket may add an attachment.</p>
                                                    </div>
                                                }




                                            </div><!-- /content -->

                                        </div><!-- /card -->
                                
                                </div><!-- /attachment form  column -->

                                <br />

                                <div class="col-lg-8">

                                    <div class="card">

                                        <div class="title">
                                            <h5>Attachment List</h5>
                                        </div>

                                        <div class="content">

                                            <table class="display table table-hover">

                                                <thead>
                                                    <tr>
                                                        <th>Posted By</th>
                                                        <th>Title</th>
                                                        <th>Type</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model.Attachments.OrderByDescending(a => a.Created))
                                                    {
                                                        <tr>
                                                            <td>@Html.DisplayFor(modelItem => item.Author.DisplayName)</td>
                                                            <td>
                                                                @if (Model.Title == null)
                                                                {
                                                                    <strong class="grey-text text-darken-2">(No Title)</strong>
                                                                }
                                                                else
                                                                {
                                                                    <strong class="grey-text text-darken-2">@Html.DisplayFor(modelItem => item.Title)</strong>
                                                                }

                                                                <br />
                                                                @if (Model.Description == null)
                                                                {
                                                                    <span class="grey-text">(No Description)</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="grey-text">@Html.DisplayFor(modelItem => item.Description)</span>
                                                                }

                                                            </td>

                                                            <td>
                                                                @if (item.Type == ".png" || item.Type == ".jpg" || item.Type == ".jpeg" || item.Type == ".gif")
                                                                {
                                                                    <i class="fa fa-file-image-o"></i>
                                                                }
                                                                else if (item.Type == ".pdf") 
                                                                {
                                                                    <i class="fa fa-file-pdf-o"></i>
                                                                }
                                                                else if (item.Type == ".doc" || item.Type == ".docx")
                                                                {
                                                                    <i class="fa fa-file-word-o"></i>
                                                                }
                                                                else if (item.Type == ".ppt")
                                                                {
                                                                    <i class="fa fa-file-powerpoint-o"></i>
                                                                }
                                                                else if (item.Type == ".xls" || item.Type == ".xlsx")
                                                                {
                                                                    <i class="fa fa-file-excel-o"></i>
                                                                }
                                                                else if (item.Type == ".zip")
                                                                {
                                                                    <i class="fa fa-file-archive-o"></i>
                                                                }
                                                                else if (item.Type == ".txt")
                                                                {
                                                                    <i class="fa fa-file-text"></i>
                                                                }

                                                                <strong class="text-uppercase">@Html.DisplayFor(modelItem => item.Type)</strong>
                                                            </td>
                                                            <td>
                                                                <a href="@item.MediaURL" class="btn btn-small"><i class="fa fa-download"></i></a>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>

                                            </table><!-- /table -->

                                        </div><!-- /content -->

                                    </div><!-- /card -->

                                    

                                </div><!-- /attachment list column -->

                            </div><!-- /row -->



                            

                        </div><!-- /content (attachment form)-->

                        <br />

                        

                    </div>

                </li><!-- /attachments -->

                <li><!-- begin history-->

                    <div class="collapsible-header">
                        <i class="fa fa-history"></i>Ticket History<span class="yay-collapse-icon mdi-navigation-expand-more right"></span>
                    </div>

                    <div class="collapsible-body">

                        <div class="content">

                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Edited By</th>
                                        <th>Changed</th>
                                        <th>From</th>
                                        <th>To</th>
                                        <th>Changed On</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var history in Model.History.OrderByDescending(c => c.Changed))
                                    {
                                        <tr>
                                            <td>@history.User.DisplayName</td>
                                            <td>@history.Property</td>
                                            <td>@Html.Raw(history.OldValue)</td>
                                            <td>@Html.Raw(history.NewValue)</td>
                                            <td>@history.Changed</td>
                                        </tr>
                                    }
                                </tbody>
                            </table><!-- /table -->

                        </div><!-- /content -->

                    </div><!-- /collapsible body -->


                </li><!-- / history -->

            </ul><!-- /attachments | history -->

        </div><!-- /card (Attachments | History)-->

        

</section>

@section scripts {
    <script>
        $('table').DataTable({

            "iDisplayLength": 5,
            "aLengthMenu": [
              [5, 10, 25, 50, -1],
              [5, 10, 25, 50, "all"]
            ]

        });
    </script>

}
